/*
 * This source file was generated by the Gradle 'init' task
 */
package tools.refinery.generator.server;




import org.eclipse.jetty.ee10.servlet.ServletContextHandler;
import org.eclipse.jetty.ee10.websocket.server.config.JettyWebSocketServletContainerInitializer;
import org.eclipse.jetty.server.Server;


public class ServerLauncher {

	public static final int DEFAULT_LISTEN_PORT = 1314;

	private static Server server;

	private static int getPort(){
		String portStr = System.getenv("REFINERY_GENERATOR_WS_PORT");
		if(portStr != null){
			return Integer.parseInt(portStr);
		}
		return DEFAULT_LISTEN_PORT;
	}

    public static void main(String[] args) throws Exception {
		// Create a Server with a ServerConnector listening on configured port.
		int port = getPort();
		server = new Server(port);

		// Create a ServletContextHandler with the given context path.
		ServletContextHandler handler = new ServletContextHandler(ServletContextHandler.SESSIONS);
		handler.setContextPath("/");
		server.setHandler(handler);

		// Ensure that JavaxWebSocketServletContainerInitializer is initialized,
		// to set up the ServerContainer for this web application context.
		JettyWebSocketServletContainerInitializer.configure(handler, null);


		// Add a WebSocket-initializer Servlet to register WebSocket endpoints.
		handler.addServlet(GeneratorServerInitServlet.class, "/");

		// Starting the Server will start the ServletContextHandler.
		server.start();
    }
}
